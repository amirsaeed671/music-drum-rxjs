{"id":"node_modules/rxjs/_esm5/internal/scheduler/async.js","dependencies":[{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/scheduler/async.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/src/internal/scheduler/async.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/package.json","includedInParent":true,"mtime":1590589808911},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/package.json","includedInParent":true,"mtime":1590585452092},{"name":"./AsyncAction","loc":{"line":2,"column":28},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/scheduler/async.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js"},{"name":"./AsyncScheduler","loc":{"line":3,"column":31},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/scheduler/async.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.async = void 0;\n\nvar _AsyncAction = require(\"./AsyncAction\");\n\nvar _AsyncScheduler = require(\"./AsyncScheduler\");\n\n/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nvar async = /*@__PURE__*/new _AsyncScheduler.AsyncScheduler(_AsyncAction.AsyncAction);\nexports.async = async;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/scheduler/async.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/scheduler/async.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/scheduler/async.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}}],"sources":{"../../../src/internal/scheduler/async.ts":"import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n"},"lineCount":null}},"error":null,"hash":"107eaeff50181ea582b523b802e5b998","cacheData":{"env":{}}}