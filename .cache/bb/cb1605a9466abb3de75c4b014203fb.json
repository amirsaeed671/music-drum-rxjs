{"id":"node_modules/rxjs/_esm5/internal/observable/merge.js","dependencies":[{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/merge.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/src/internal/observable/merge.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/package.json","includedInParent":true,"mtime":1590585452279},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/package.json","includedInParent":true,"mtime":1590585452092},{"name":"../Observable","loc":{"line":2,"column":27},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/Observable.js"},{"name":"../util/isScheduler","loc":{"line":3,"column":28},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/util/isScheduler.js"},{"name":"../operators/mergeAll","loc":{"line":4,"column":25},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/operators/mergeAll.js"},{"name":"./fromArray","loc":{"line":5,"column":26},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/fromArray.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\n\nvar _Observable = require(\"../Observable\");\n\nvar _isScheduler = require(\"../util/isScheduler\");\n\nvar _mergeAll = require(\"../operators/mergeAll\");\n\nvar _fromArray = require(\"./fromArray\");\n\n/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nfunction merge() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var concurrent = Number.POSITIVE_INFINITY;\n  var scheduler = null;\n  var last = observables[observables.length - 1];\n\n  if ((0, _isScheduler.isScheduler)(last)) {\n    scheduler = observables.pop();\n\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable.Observable) {\n    return observables[0];\n  }\n\n  return (0, _mergeAll.mergeAll)(concurrent)((0, _fromArray.fromArray)(observables, scheduler));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":17,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":17,"column":9}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":17,"column":14}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":17,"column":17}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":96},"generated":{"line":18,"column":17}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":18,"column":20}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":7}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":11}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":13}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":16}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":19}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":21}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":24}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":33}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":28},"generated":{"line":20,"column":34}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":96},"generated":{"line":20,"column":42}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":96},"generated":{"line":20,"column":44}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":122,"column":96},"generated":{"line":20,"column":48}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":123,"column":1},"generated":{"line":22,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":1},"generated":{"line":24,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":5},"generated":{"line":24,"column":6}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":14},"generated":{"line":24,"column":16}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":32},"generated":{"line":24,"column":19}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":37},"generated":{"line":24,"column":25}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":37},"generated":{"line":24,"column":26}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":124,"column":1},"generated":{"line":24,"column":43}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":125,"column":2},"generated":{"line":25,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":125,"column":6},"generated":{"line":25,"column":6}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":125,"column":18},"generated":{"line":25,"column":15}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":125,"column":18},"generated":{"line":25,"column":18}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":125,"column":2},"generated":{"line":25,"column":22}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":2},"generated":{"line":26,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":26,"column":6}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":26,"column":10}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":26,"column":13}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":23},"generated":{"line":26,"column":24}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":25},"generated":{"line":26,"column":25}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":25},"generated":{"line":26,"column":36}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":25},"generated":{"line":26,"column":37}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":25},"generated":{"line":26,"column":43}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":25},"generated":{"line":26,"column":46}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":23},"generated":{"line":26,"column":47}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":126,"column":2},"generated":{"line":26,"column":48}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":28,"column":6}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":127,"column":31},"generated":{"line":28,"column":36}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":28,"column":40}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":127,"column":31},"generated":{"line":28,"column":43}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":29,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":29,"column":4}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":8},"generated":{"line":29,"column":13}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":8},"generated":{"line":29,"column":16}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":26},"generated":{"line":29,"column":27}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":26},"generated":{"line":29,"column":28}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":8},"generated":{"line":29,"column":31}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":29,"column":33}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":31,"column":8}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":16},"generated":{"line":31,"column":19}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":16},"generated":{"line":31,"column":20}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":31,"column":26}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":27},"generated":{"line":31,"column":29}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":31,"column":30}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":39},"generated":{"line":31,"column":34}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":41}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":52}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":53}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":64}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":65}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":71}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":74}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":75}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":39},"generated":{"line":31,"column":76}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":81}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":129,"column":45},"generated":{"line":31,"column":91}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":6}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":16}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":19}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":30}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":31}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":34}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":130,"column":5},"generated":{"line":32,"column":36}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":131,"column":3},"generated":{"line":33,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":34,"column":9}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":34,"column":13}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":14},"generated":{"line":34,"column":20}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":34,"column":24}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":25},"generated":{"line":34,"column":29}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":34,"column":37}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":132,"column":43},"generated":{"line":34,"column":39}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":4}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":14}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":17}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":28}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":29}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":32}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":35,"column":34}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":135,"column":2},"generated":{"line":36,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":38,"column":6}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":26},"generated":{"line":38,"column":15}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":26},"generated":{"line":38,"column":20}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":38,"column":24}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":28}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":39}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":40}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":46}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":51}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":38,"column":52}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":56}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":67}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":68}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":69}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":70}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":82}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":136,"column":41},"generated":{"line":38,"column":106}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":137,"column":3},"generated":{"line":39,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":137,"column":3},"generated":{"line":39,"column":11}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":137,"column":3},"generated":{"line":39,"column":22}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":137,"column":3},"generated":{"line":39,"column":23}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":137,"column":3},"generated":{"line":39,"column":24}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":137,"column":3},"generated":{"line":39,"column":25}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":139,"column":2},"generated":{"line":40,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":9}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":33}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":43}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":45}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":71}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":82}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":84}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":93}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":94}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":42,"column":95}}],"sources":{"../../../src/internal/observable/merge.ts":"import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n"},"lineCount":null}},"error":null,"hash":"cfd4eca222fca814f29eac5d7128b5a3","cacheData":{"env":{}}}