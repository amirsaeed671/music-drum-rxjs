{"id":"node_modules/rxjs/_esm5/internal/observable/from.js","dependencies":[{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/from.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/src/internal/observable/from.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/package.json","includedInParent":true,"mtime":1590589808911},{"name":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/package.json","includedInParent":true,"mtime":1590585452092},{"name":"../Observable","loc":{"line":2,"column":27},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/from.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/Observable.js"},{"name":"../util/subscribeTo","loc":{"line":3,"column":28},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/from.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/util/subscribeTo.js"},{"name":"../scheduled/scheduled","loc":{"line":4,"column":26},"parent":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/observable/from.js","resolved":"/Users/amirsaeed671/Documents/learning/music-drum-rxjs/node_modules/rxjs/_esm5/internal/scheduled/scheduled.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.from = from;\n\nvar _Observable = require(\"../Observable\");\n\nvar _subscribeTo = require(\"../util/subscribeTo\");\n\nvar _scheduled = require(\"../scheduled/scheduled\");\n\n/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */\nfunction from(input, scheduler) {\n  if (!scheduler) {\n    if (input instanceof _Observable.Observable) {\n      return input;\n    }\n\n    return new _Observable.Observable((0, _subscribeTo.subscribeTo)(input));\n  } else {\n    return (0, _scheduled.scheduled)(input, scheduler);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":109,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":15,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":15,"column":9}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":15,"column":13}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":18},"generated":{"line":15,"column":14}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":15,"column":19}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":18},"generated":{"line":15,"column":21}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":15,"column":30}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":110,"column":18},"generated":{"line":15,"column":32}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":16,"column":6}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":16,"column":7}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":111,"column":13},"generated":{"line":16,"column":18}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":112,"column":6},"generated":{"line":17,"column":8}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":112,"column":6},"generated":{"line":17,"column":13}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":112,"column":19},"generated":{"line":17,"column":25}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":112,"column":19},"generated":{"line":17,"column":49}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":113,"column":5},"generated":{"line":18,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":113,"column":5},"generated":{"line":18,"column":13}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":113,"column":5},"generated":{"line":18,"column":18}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":19,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":11}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":15}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":37}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":38}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":68}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":73}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":74}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":115,"column":3},"generated":{"line":21,"column":75}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":116,"column":4},"generated":{"line":22,"column":9}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":0}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":11}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":37}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":42}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":44}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":53}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":117,"column":3},"generated":{"line":23,"column":54}},{"source":"../../../src/internal/observable/from.ts","name":null,"original":{"line":118,"column":1},"generated":{"line":24,"column":0}}],"sources":{"../../../src/internal/observable/from.ts":"import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"078412ccb3167508bf09d95b4e30e33f","cacheData":{"env":{}}}